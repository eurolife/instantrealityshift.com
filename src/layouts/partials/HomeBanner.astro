---
import BigCta from '@/components/BigCta.astro';
import GradientTitle from '@/components/GradientTitle.astro';
import ImageMod from '@/components/ImageMod.astro';
import RightArrowBtn from '@/components/RightArrowBtn.astro';
import { markdownify } from '@/lib/utils/textConverter';
import type { CollectionEntry } from 'astro:content';
import { getEntry } from 'astro:content';

const homeBanner = (await getEntry(
  'homeBanner',
  'home-banner'
)) as CollectionEntry<'homeBanner'>;

const { head, button, image, quote, title } = homeBanner?.data;
---

<section class="mb-20 mt-10 md:mt-0">
  <div class="md:pt-2 overflow-hidden">
    <div class="bg-hero-image py-10">
      <div class="container">
        <div class="grid md:grid-cols-12 items-center">
          <div class="md:col-span-6 text-center md:text-left">
            <div class="mb-7" data-aos="fade-up-sm">
              <GradientTitle title={head} />
            </div>
            <h1
              class="xl:text-hero-large xl:leading-[1.12] text-h1-sm font-normal mb-10"
              data-aos="fade-up-sm"
              data-aos-delay="100"
            >
              {title}
            </h1>
            <div
              class="flex flex-col items-center md:items-start gap-4 lg:gap-8"
              data-aos="fade-up-sm"
              data-aos-delay="150"
            >
              {
                quote && (
                  <p
                    class="text-xl md:text-3xl text-text/90"
                    set:html={markdownify(quote)}
                  />
                )
              }
              <div
                class="flex flex-col lg:flex-row align-items-stretch lg:align-items-auto"
              >
                <BigCta title="Play sample audio" />
                {
                  button && button.enable && (
                    <RightArrowBtn
                      link={button.link}
                      label={button.label}
                      className="btn btn-primary mt-4 lg:mt-0 lg:ml-2 max-w-none"
                    />
                  )
                }
              </div>
            </div>
          </div>
          <div class="md:col-span-6 pt-10 md:pt-0">
            <div class="relative">
              <canvas
                class="absolute inset-0 w-full h-full overflow-hidden z-10 heroSporeCanvas"
              ></canvas>
              <div class="absolute inset-0 grid place-items-center z-20">
                <ImageMod
                  src="/images/star.png"
                  alt="s"
                  width={600}
                  height={600}
                  class="w-[220px] md:w-auto"
                />
              </div>
              <div class="absolute inset-0 grid place-items-center">
                <div
                  class="flex items-center justify-center rotate-45 w-full h-full"
                >
                  <div
                    class="w-2/6 h-3/6 bg-secondary blur-[80px] rounded-full"
                    data-aos="fade-up-sm"
                    data-aos-delay="100"
                    data-aos-duration="1000"
                  >
                  </div>
                  <div
                    class="w-2/6 h-3/6 bg-tertiary blur-[80px] rounded-full"
                    data-aos="fade-up-sm"
                    data-aos-delay="200"
                    data-aos-duration="1000"
                  >
                  </div>
                </div>
              </div>
              <!-- Rotating Image -->
              <div class="rotate-infinite relative z-30">
                <ImageMod
                  src={image.src}
                  alt={image.alt}
                  width={800}
                  height={800}
                  class="w-full aspect-square"
                />
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  import { sporeCanvas } from '@/lib/utils/particleCanvas';

  document.addEventListener('astro:page-load', () => {
    const targetElementClassName = '.heroSporeCanvas';
    const particleCount = 200;
    const particleMinSize = 1;
    const particleMaxSize = 5;
    sporeCanvas(
      targetElementClassName,
      particleCount,
      particleMinSize,
      particleMaxSize
    );
  });
</script>
